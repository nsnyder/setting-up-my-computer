###########################################
#        Start tmux Automatically         #
###########################################
if [ "$TMUX_SESSION_NAME" = "" ]; then export TMUX_SESSION_NAME=default; fi
if [ "$TMUX" = "" ]; then tmux attach -t $TMUX_SESSION_NAME || tmux new -s $TMUX_SESSION_NAME; fi

###########################################
#            Export Variables             #
###########################################

# Potential colors can be found by entering: spectrum_ls
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=247"
export ZSH_AUTOSUGGEST_STRATEGY=(history completion)

# Set "hardcore mode" for zsh-you-should-use.
export YSU_HARDCORE=1

###########################################
#           Speed up Completions          #
###########################################
# Ripped from these comments (because the gist wasn't working):
#   https://gist.github.com/ctechols/ca1035271ad134841284

zcachedir="$HOME/.zcache"
[[ -d "$zcachedir" ]] || mkdir -p "$zcachedir"

_update_zcomp() {
    setopt local_options
    setopt extendedglob
    autoload -Uz compinit
    local zcompf="$1/zcompdump"
    # use a separate file to determine when to regenerate, as compinit doesn't
    # always need to modify the compdump
    local zcompf_a="${zcompf}.augur"

    if [[ -e "$zcompf_a" && -f "$zcompf_a"(#qN.md-1) ]]; then
        compinit -C -d "$zcompf"
    else
        compinit -d "$zcompf"
        touch "$zcompf_a"
    fi
    # if zcompdump exists (and is non-zero), and is older than the .zwc file,
    # then regenerate
    if [[ -s "$zcompf" && (! -s "${zcompf}.zwc" || "$zcompf" -nt "${zcompf}.zwc") ]]; then
        # since file is mapped, it might be mapped right now (current shells), so
        # rename it then make a new one
        [[ -e "$zcompf.zwc" ]] && mv -f "$zcompf.zwc" "$zcompf.zwc.old"
        # compile it mapped, so multiple shells can share it (total mem reduction)
        # run in background
        zcompile -M "$zcompf" &!
    fi
}
_update_zcomp "$zcachedir"
unfunction _update_zcomp

###########################################
#             Setup the Theme             #
###########################################

export ZSH_THEME_GIT_PROMPT_DELETED="%{$fg_bold[red]%} ‚úò"

if [[ -n $SSH_CLIENT ]] then;
  export TYPEWRITTEN_PROMPT_LAYOUT="singleline_verbose"
else
  export TYPEWRITTEN_PROMPT_LAYOUT="singleline"
fi

# Import plugins.
source ~/.zsh/.plugins.sh

# Inspired by: https://gist.github.com/BretFisher/78a90d4e39e79d5f3c9769d4002f67a7
# Make sure to set this up after your theme. If the left prompt is dynamic,
# then initial_prompt should be declared *inside* the function.
local initial_prompt=$PROMPT
function _show_presenting () {
  local good_emoji=üçπ

  # If we're in presentation mode, use coffee instead of alcohol.
  if [[ -n $PRESENT ]] then
    good_emoji=‚òïÔ∏è

    if [[ ! $PWD == $PRESENT ]]; then
      # If we're not in the root, show the current folder.
      RPROMPT="%{$fg[magenta]%} %c %{$fg[blue]%}<%{$reset_color%}"
    else
      # Otherwise, show the minimum.
      RPROMPT="%{$fg[blue]%} <"
    fi
  fi
  PROMPT=%(?:$good_emoji:üî•)" ${initial_prompt}"
}

# Set up preferred colors.
export LS_OPTIONS="--color=auto"
export LSCOLORS='GxfxcxcxBxcaeaababagag'

zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

# Run the prompts.
setopt PROMPT_SUBST
# Change directories quicker.
setopt AUTO_CD
# Use dvorak for spelling completion.
setopt DVORAK

# Tab completion:
zstyle ':completion:*' menu select
zmodload zsh/complist

# Tab complete hidden files.
_comp_options+=(globdots)

# Aliases:

# Git.
alias ga='git add .'
alias gb='git branch'
alias gbd='git branch -D'
alias gc='git commit -a'
alias gd='git diff'
alias gp='git push'
alias gs='git status'
alias gull='git pull'

# Common utilities.
alias chreset='chmod 644'
alias detach='tmux detach -P'
alias l='ls $LS_OPTIONS -AF'
alias ls='ls $LS_OPTIONS'

# Presentation mode.
alias present='export PRESENT=$(pwd)'
alias unpresent='unset PRESENT'

alias build-antibody="antibody bundle < ~/.zsh/.plugins.txt > ~/.zsh/.plugins.sh && source ~/.zshrc"

HISTSIZE=1000
SAVEHIST=1000
HISTFILE=~/.zsh/.history

precmd_functions+=(_show_presenting)

# Render colors when the shell starts. (Useful when testing colors.)
# ~/projects/setting-up-my-computer/dotfiles/color-viewer.sh
